name: CI/CD for Online Boutique

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  HELM_CHART_NAME: onlineboutique
  HELM_REPO_URL: ${{ secrets.HELM_REPO_URL }}
  YC_API_KEY: ${{ secrets.YC_API_KEY }}
  YC_CLUSTER_NAME: ${{ secrets.YC_CLUSTER_NAME }}
  YC_FOLDER_ID: ${{ secrets.YC_FOLDER_ID }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install kubectl
        run: |
          sudo apt-get update && sudo apt-get install -y apt-transport-https
          curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
          echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee -a /etc/apt/sources.list.d/kubernetes.list
          sudo apt-get update
          sudo apt-get install -y kubectl

      - name: Install Yandex Cloud CLI
        run: |
          #pip install yandexcloud
          sudo curl -f -s -LO https://storage.yandexcloud.net/yandexcloud-yc/install.sh
          sudo bash install.sh -i /usr/local/yandex-cloud -n
          sudo ln -sf /usr/local/yandex-cloud/bin/yc /usr/local/bin/yc
          
      - name: Run Yandex Cloud CLI
        run: |
          yc config profile create sa-profile && yc config profile activate sa-profile
          cat >key.raw < <(echo "$YC_API_KEY")
          cat >key.json <key.raw
          yc config set service-account-key ./key.json
          yc config set folder-id $YC_FOLDER_ID
          #yc config setup --non-interactive --api-key $YC_API_KEY
          yc compute instance list
          yc managed-kubernetes cluster \
           get-credentials k8s-platform \
           --external
      - name: Install Helm
        run: |
          curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
          chmod 700 get_helm.sh
          ./get_helm.sh

      #- name: Add Helm repository
      #  run: |
      #    helm repo add my-repo $HELM_REPO_URL
      #    helm repo update

      - name: Deploy Helm chart
        run: |
          #helm upgrade onlineboutique oci://us-docker.pkg.dev/online-boutique-ci/charts/onlineboutique \
          #  --install
          helm upgrade $HELM_CHART_NAME $HELM_REPO_URL \
            --install
          #helm upgrade --install $HELM_CHART_NAME my-repo/$HELM_CHART_NAME \
          #  --namespace online-boutique \
          #  --create-namespace

      - name: Verify deployment
        run: |
          kubectl get deployment frontend
          #kubectl get pods -n online-boutique
